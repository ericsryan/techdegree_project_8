# Generated by Django 2.1.5 on 2019-01-27 07:21

from django.db import migrations

from ..models import Attribute


def order_attributes(apps, schema_editor):
    """Set the order for the attributes."""
    attributes = [
        ['category', 0],
        ['formula', 0],
        ['strunz classification', 0],
        ['color', 0],
        ['crystal system', 0],
        ['unit cell', 0],
        ['crystal symmetry', 0],
        ['cleavage', 0],
        ['mohs scale hardness', 0],
        ['luster', 0],
        ['streak', 0],
        ['diaphaneity', 0],
        ['optical properties', 0],
        ['refractive index', 0],
        ['crystal habit', 0],
        ['specific gravity', 0],
        ['group', 0]
    ]
    # Retrieve the number of occurences of each attribute
    for attribute in attributes:
        attribute[1] = Attribute.objects.all().filter(name=attribute[0]).count()
    # Sort the list by the number of occurences
    attributes = sorted(attributes,
                        key=lambda attribute: attribute[1],
                        reverse=True)
    # Assign an order number to each attribute
    for order, attribute in enumerate(attributes):
        attribute[1] = order
    # Generate dictionary from the attributes list
    attributes_dict = {attribute[0]: attribute[1] for attribute in attributes}

    attribute_objects = Attribute.objects.all()
    # Update each attribute with an order number
    for attribute in attribute_objects:
        attribute.order = attributes_dict[attribute.name]
        attribute.save()

class Migration(migrations.Migration):

    dependencies = [
        ('minerals', '0002_save_minerals_to_db'),
    ]

    operations = [
        migrations.RunPython(order_attributes)
    ]
